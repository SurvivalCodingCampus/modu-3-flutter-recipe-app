@startuml
'https://plantuml.com/class-diagram

skinparam ranksep 150
skinparam nodesep 100

' ================ USER DOMAIN ================
package "User Domain" {
  enum SocialLogin {
    none
    facebook
    google
  }

  abstract class User {
    String id
    String name
    String email
    String profileImgUrl
    String bio
    String job
    int followersCount
    int followingsCount
    int recipeCount
  }

  class GoogleUser extends User {
  }

  class FacebookUser extends User {
  }

  class NoneSocialUser extends User {
    String password
  }

  interface UserRepository {
    Future<Result<User>> getUser()
    Future<Result<void>> follow(String id)
  }

  interface AuthRepository {
    Future<Result<void>> signIn(String email, String password)
    Future<Result<void>> signInForSocial()
    Future<Result<void>> singUp(String name, String email, String password)
    Future<Result<void>> singUpForSocial(SocialLogin type, String authKey)
  }
}

' ================ RECIPE DOMAIN ================
package "Recipe Domain" {
  enum TimeFilterType {
    all
    newest
    oldest
    popularity
  }

  enum RateType {
    one
    two
    three
    four
    five
  }

  class RecipeTagList {
    List<String> recipeTags
  }

  class Recipe {
    String id
    String name
    int estimatedTime
    bool isFavorite
    double rate
    String makeUserName
    String makeUserImageUrl
    String? videoUrl
    String imageUrl
  }

  class RecipeInfo extends Recipe {
    int reviewCount
    List<Ingredient> ingredient
    List<Procedure> procedure
    String makeUserLocation?
    bool isFollow?
    String recipeDeepLink
  }

  class Ingrident {
    String name
    int weight
    String imageUrl
  }

  class Procedure {
    List<String> descriptions
  }

  interface TagRepository {
    Future<Result<RecipeTagList>> getTagList()
  }

  interface RecipeRepository {
    Future<Result<List<Recipe>>> getRecipeListForTag(String tag)
    Future<Result<List<Recipe>>> getRecipeListForSearch(String query, TimeFilterType timeFilterType, RateType rateType, String tag)
    Future<Result<List<Recipe>>> getRecipeListForSavedRecipe()
    Future<Result<List<Recipe>>> getRecipeListForRecent()
    Future<Result<RecipeInfo>> getRecipeInfo(String recipeId)
  }

  interface UserRecipeRepository {
    Future<Result<void>> saveBookmark(String recipeId)
    Future<Result<void>> removeBookmark(String recipeId)
    Future<Result<void>> rateRating(String recipeId)
    Future<Result<void>> addRecipe(RecipeInfo recipeInfo)
    Future<Result<String>> getRecipeDeepLink(String recipeId)
    Future<Result<Recipe>> getMyRecipe()
    Future<Result<Recipe>> getMyRecipeWithVideo()
    Future<Result<Recipe>> getMyRecipeWithTag()
  }
}

' ================ REVIEW DOMAIN ================
package "Review Domain" {
  class ReviewUiModel {
    String recipeId
    int commentsCount
    int favoriteCount
    List<Review> reviews
  }

  class Review {
    String name
    String profileImageUrl
    Datetime createdAt
    String contents
    int likeCount
    int unlikeCount
  }

  interface ReviewRepsitory {
    Future<Result<void>> writeComment(String recipeId, String contents)
    Future<Result<ReviewUiModel>> getRecipeInfo(String id)
    Future<Result<void>> likeReview(String reviewId)
    Future<Result<void>> unlikeReview(String reviewId)
  }
}

' ================ NOTIFICATION DOMAIN ================
package "Notification Domain" {
  enum ReadAlertType {
    all
    read
    unread
  }

  class Notification {
    String id
    String title
    String decription
    Datetime createdAt
    bool isNewest
    bool hasRead
  }

  interface NotificationRepository {
    Future<Result<List<Notification>>> getNotifications(ReadAlertType readAlertType)
    Future<Result<void>> readNotifications(String notificationId)
  }
}

' ================ RELATIONSHIPS ================
User -- UserRepository
User -- AuthRepository

Recipe -- RecipeRepository
RecipeTagList -- TagRepository
Recipe -- UserRecipeRepository

ReviewUiModel -- ReviewRepository

Notification -- NotificationRepository

@enduml